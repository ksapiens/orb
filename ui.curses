#!/usr/bin/env ruby
$LOAD_PATH << "#{File.dirname __FILE__}/*"

#require 'rubygems'
require "o.rb"
require "terminal.rb"

# Globals
CONF = { 	spacing: 1,
					margin: 1,
				 	top:  1,
				 	left: 1,
				 	bottom: 1,
				 	limit: 6,				 	
					colors: {	#			R			G			B
						default:  	[ 100, 100, 100 ],						
						type: 			[ 700, 700, 300 ],
						executable: [ 700, 300, 300 ],
						item: 			[ 300, 700, 300 ],
						chardevice: [ 300, 700, 700 ],
						blockdevice:[ 700, 300, 700 ],
						special: 		[ 700, 300, 700 ],
						directory: 	[ 300, 300, 700 ],
						host: 			[ 100, 300, 700 ],
						highlight: 	[ 200, 200, 200 ] } }
CONF.each{ |k,v| eval "%s=%s" % [k.upcase, v] }#.to_s +"="+ v.to_s }


MENU = List.new ({ entries: [Directory.new( "/", "root" ),
									 	Directory.new( ENV["HOME"], "home" ),
									  Directory.new( ENV["PWD"], "work"),
									  #Type.new( "text", "/" ),
									  #Type.new( "image", "/" ),
									  #Type.new( "video", "/" ),
									  Recent.new,
									  Frequent.new( "frequent"),
									  HostList.new( ENV["HOME"]+"/.hostlist/","web"),
									  Executable.new("/usr/bin/file") ],
										x: LEFT, y: TOP, limit:LIMIT  })

 #<= devices, 
 #<= configuration, 
 #<= processes, parameters 
#<= hotplugged devices 

HELP = TextWindow.new <<H
 <= all items 
 <= user directory
 <= current working directory
 <= history of items
 <= most used items
 <= host browser
    
    Orb -  Open Resource Browser
    
    a) type in the option, when highlighted, press TAB to select.
    b) move your pointer over the option and click left for default action and right for action list
    c) tap for default, twofinger tap for actions
    
H

CONF[:main_x] = LEFT + MENU.maxx + 1
LAYOUT = { menu: MENU,
					 main: HELP }
	 				 #main: CMDBuilder.new("file")  }


# main class
class ORB # < Window
	def initialize
		@cmd = ""
		init
	end
	  
  def colortest
		clear
		COLORS.each_with_index do |color,i|
			"#{color[0]} - #{color_content i}".draw color[0],-20,5,i,Curses
			#refresh; 
			end; end
		
	def run
		loop do
			clear
			refresh
			#colortest
			LAYOUT.values.each( &:draw )
    	input = getch #Event.poll 
			refresh  
    	case input
    		when KEY_MOUSE
    			mouse = getmouse
					#UILOG.debug "x: %s y: %s SESSION: %s" % [mouse.x, mouse.y, SESSION.length]
					if mouse.x <= LAYOUT[:menu].maxx + CONF[:margin]
						 LAYOUT[:menu].click mouse.x, mouse.y
					else
						 LAYOUT[:main].click mouse.x, mouse.y
					end	
				when KEY_EXIT
        	exit
				when KEY_F12
					colortest
        else
        	@cmd += input
        	UILOG.debug @cmd
    	end
    end
  end

begin
		ORB.new.run if __FILE__ == $0
end
ensure
	use_default_colors()
  close_screen
end
